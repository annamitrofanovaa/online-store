{
  "openapi": "3.0.0",
  "info": {
    "title": "Your API",
    "version": "1.0.0",
    "description": "API documentation using Swagger JSDoc"
  },
  "apis": ["./routes/*.js"],
  "paths": {
    "/api/admin/assignRole": {
      "post": {
        "summary": "Assign a role to a user",
        "tags": ["Admin"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string"
                  },
                  "role": {
                    "type": "string"
                  }
                },
                "required": ["userId", "role"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Role assigned successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/author": {
      "post": {
        "summary": "Create a new author",
        "tags": ["Authors"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "biography": {
                    "type": "string"
                  }
                },
                "required": ["name"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Author created successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "summary": "Get all authors",
        "tags": ["Authors"],
        "responses": {
          "200": {
            "description": "A list of authors"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/book": {
      "post": {
        "summary": "Create a new book",
        "tags": ["Books"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "price": {
                    "type": "number"
                  },
                  "genreId": {
                    "type": "string"
                  },
                  "authorId": {
                    "type": "string"
                  },
                  "info": {
                    "type": "string"
                  },
                  "img": {
                    "type": "string",
                    "format": "binary"
                  }
                },
                "required": ["name", "price", "genreId", "authorId", "img"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Book created successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "summary": "Get all books",
        "tags": ["Books"],
        "parameters": [
          {
            "in": "query",
            "name": "genreId",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "authorId",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of books"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/book/{id}": {
      "get": {
        "summary": "Get a book by ID",
        "tags": ["Books"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID of the book",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A single book"
          },
          "404": {
            "description": "Book not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a book by ID",
        "tags": ["Books"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID of the book",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Book deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Book not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "summary": "Edit a book by ID",
        "tags": ["Books"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID of the book",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "price": {
                    "type": "number"
                  },
                  "genreId": {
                    "type": "string"
                  },
                  "authorId": {
                    "type": "string"
                  }
                },
                "required": ["name", "price", "genreId", "authorId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Book edited successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Book not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/genre": {
      "post": {
        "summary": "Create a new genre",
        "tags": ["Genres"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                },
                "required": ["name"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Genre created successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden (if not an ADMIN)"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "summary": "Get all genres",
        "tags": ["Genres"],
        "responses": {
          "200": {
            "description": "A list of genres"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Get information about the API",
        "tags": ["Root"],
        "responses": {
          "200": {
            "description": "Information about the API"
          }
        }
      }
    },
    "/api/user/registration": {
      "post": {
        "summary": "Register a new user",
        "tags": ["Users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": ["username", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully registered"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/api/user/login": {
      "post": {
        "summary": "Login to the system",
        "tags": ["Users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": ["username", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully logged in"
          },
          "401": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/api/user/auth": {
      "get": {
        "summary": "Check if the user is authenticated",
        "tags": ["Users"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User is authenticated"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  },
  "components": {},
  "tags": [
    {
      "name": "Admin",
      "description": "Admin operations"
    },
    {
      "name": "Authors",
      "description": "Author management"
    },
    {
      "name": "Books",
      "description": "Book management"
    },
    {
      "name": "Genres",
      "description": "Genre management"
    },
    {
      "name": "Root",
      "description": "Root endpoint"
    },
    {
      "name": "Users",
      "description": "User management"
    }
  ]
}
